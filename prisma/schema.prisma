// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String    @id @map("_id")
  sessions Session[]

  name     String
  email    String    @unique
  image    String?
  password String? // creadentials
  googleId String?   @unique // googleAuth
  projects Project[]

  @@map("users")
}

model Session {
  id        String   @id @map("_id")
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("sessions")
}

enum Account {
  FACEBOOK
  LINKEDIN
  INSTAGRAM
}

model Project {
  id          String @id @map("_id")
  userId      String
  title       String
  description String

  country  String
  city     String
  distinct String
  type     String
  spaces   String
  accounts Account[]

  caseStudy CaseStudy[]

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("projects")
}

model CaseStudy {
  id          String @id @map("_id")
  projectId   String
  title       String
  description String

  content        String?
  noOfWeeks      String?
  targetAudience String? @map("target-audience")
  pros           String? @map("pros")
  cons           String? @map("cons")
  hashtags       String?

  posts Post[]

  project Project @relation(references: [id], fields: [projectId], onDelete: Cascade)

  @@map("case-studies")
}

model Post {
  id               String  @id @map("_id")
  caseStudyId      String
  title            String?
  description      String
  imageDescription String

  content  String?
  image    String?
  accounts Account[]

  postAt    DateTime?
  createdAt DateTime  @default(now())

  caseStudy CaseStudy @relation(references: [id], fields: [caseStudyId], onDelete: Cascade)

  @@map("posts")
}
